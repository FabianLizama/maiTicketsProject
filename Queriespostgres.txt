create table if not exists Clientpriority (
	id_clientpriority serial primary key,
	id_externalclient int,
	id_internalclient int,
	clientpriority_name varchar,
	foreign key(id_externalclient) references Externalclient(id_externalclient),
	foreign key(id_internalclient) references Internalclient(id_internalclient)
);

create table if not exists Externalclient (
	id_externalclient serial primary key,
	id_clientpriority int not null,
	id_ticket int not null,
	clientpriority_name varchar,
	foreign key(id_clientpriority) references Clientpriority(id_clientpriority),
	foreign key(id_ticket) references Ticket(id_ticket)
);

create table if not exists Internalclient (
	id_internalclient serial primary key,
	id_clientpriority int not null,
	id_ticket int not null,
	clientpriority_name varchar,
	foreign key(id_clientpriority) references Clientpriority(id_clientpriority),
	foreign key(id_ticket) references Ticket(id_ticket)
);

create table if not exists Academicunit (
	id_academicunit serial primary key,
	id_analyzer int not null,
	id_leadership int not null,
	foreign key(id_analyzer) references Analyzer(id_analyzer),
	foreign key(id_leadership) references Leadership(id_leadership)
);

create table if not exists Analyzer (
	id_analyzer serial primary key,
	id_academicunit int not null,
	id_leadership int not null,
	foreign key(id_academicunit) references Academicunit(id_academicunit),
	foreign key(id_leadership) references Leadership(id_leadership)
);

create table if not exists Leadership (
	id_leadership serial primary key,
	id_analyzer int not null,
	id_academicunit int not null,
	foreign key(id_analyzer) references Analyzer(id_analyzer),
	foreign key(id_academicunit) references Academicunit(id_academicunit)
);

create table if not exists Ticket (
	id_ticket serial primary key,
	ticket_creation Date,
	ticket_limit Date,
	description Varchar,
	id_ticketcategory int,
	id_ticketrating int,
	id_ticketpriority int,
	id_ticketstate int,
	id_ticketcomentary int,
	id_ticketdocument int,
	id_tickethistory int,
	id_ticketreport int,
	foreign key(id_ticketcategory) references Ticketcategory(id_ticketcategory),
	foreign key(id_ticketrating) references Ticketrating(id_ticketrating),
	foreign key(id_ticketpriority) references Ticketpriority(id_ticketpriority),
	foreign key(id_ticketstate) references Ticketstate(id_ticketstate),
	foreign key(id_ticketcomentary) references Ticketcomentary(id_ticketcomentary),
	foreign key(id_ticketdocument) references Ticketdocument(id_ticketdocument),
	foreign key(id_tickethistory) references Tickethistory(id_tickethistory),
	foreign key(id_ticketreport) references Ticketreport(id_ticketreport)
);

create table if not exists Ticketcategory (
	id_ticketcategory serial primary key,
	id_ticket int not null,
	category_name varchar,
	foreign key(id_ticket) references Ticket(id_ticket)
);

create table if not exists Ticketcomentary (
	id_ticketcomentary serial primary key,
	id_ticket int not null,
	comentary varchar,
	creation_comentary_date Date,
	creation_comentary_hour Time,
	foreign key(id_ticket) references Ticket(id_ticket)
);

create table if not exists Ticketdocument (
	id_ticketdocument serial primary key,
	id_ticket int not null,
	document_description varchar,
	foreign key(id_ticket) references Ticket(id_ticket)
);

create table if not exists Tickethistory (
	id_tickethistory serial primary key,
	id_ticket int not null,
	foreign key(id_ticket) references Ticket(id_ticket)
);

create table if not exists Ticketpriority (
	id_ticketpriority serial primary key,
	id_ticket int not null,
	priority_level int,
	foreign key(id_ticket) references Ticket(id_ticket)
);

create table if not exists Ticketrating (
	id_ticketrating serial primary key,
	id_ticket int not null,
	rating int,
	rating_description varchar,
	foreign key(id_ticket) references Ticket(id_ticket)
);

create table if not exists Ticketreport (
	id_ticketreport serial primary key,
	id_ticket int not null,
	ticket_answer varchar,
	answer_date Date,
	foreign key(id_ticket) references Ticket(id_ticket)
);

create table if not exists Ticketstate (
	id_ticketstate serial primary key,
	id_ticket int not null,
	state_name varchar,
	foreign key(id_ticket) references Ticket(id_ticket)
);

create table if not exists User_info (
	id_user_info serial primary key,
	firstname varchar,
	lastname_p varchar,
	lastname_m varchar,
	rut int,
	mail varchar,
	password varchar,
	birthdate Date
);
